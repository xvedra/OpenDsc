#ifndef _EVENTS_H
#define _EVENTS_H

#define EVENTS_FIFO_SIZE 64 //1..255



// EVENTS ////////////////////////////////
enum event {
EVENT_NULL = 0,
EVENT_EXIT,
EVENT_DRAW,
EVENT_IDLE_START,
EVENT_IDLE_DONE,
EVENT_IDLE_END,
EVENT_LOAD_DATA,
EVENT_SAVE_DATA,
EVENT_RESTORE_DATA,
EVENT_BTN_UP_CHANGE,
EVENT_BTN_UP_PRESSED,
EVENT_BTN_UP_LONG_PRESSED,
EVENT_BTN_UP_RELEASED,
EVENT_BTN_UP_TAP,
EVENT_BTN_UP_CLICK,
EVENT_BTN_UP_LONG_CLICK,
EVENT_BTN_UP_VERY_LONG_CLICK,
EVENT_BTN_UP_DOUBLE_CLICK,
EVENT_BTN_UP_TRIPLE_CLICK,
EVENT_BTN_DWN_CHANGE,
EVENT_BTN_DWN_PRESSED,
EVENT_BTN_DWN_LONG_PRESSED,
EVENT_BTN_DWN_RELEASED,
EVENT_BTN_DWN_TAP,
EVENT_BTN_DWN_CLICK,
EVENT_BTN_DWN_LONG_CLICK,
EVENT_BTN_DWN_VERY_LONG_CLICK,
EVENT_BTN_DWN_DOUBLE_CLICK,
EVENT_BTN_DWN_TRIPLE_CLICK,
EVENT_BT_CONNECTED,
EVENT_BT_DISCONNECTED,
EVENT_BT_ENABLED,
EVENT_BT_DISABLED,
EVENT_BT_CMD_ENABLE,
EVENT_BT_CMD_DISABLE,
EVENT_BT_FAIL,
EVENT_WIFI_CONNECTED,
EVENT_WIFI_DISCONNECTED,
EVENT_WIFI_ENABLED,
EVENT_WIFI_DISABLED,
EVENT_WIFI_CMD_ENABLE,
EVENT_WIFI_CMD_DISABLE,
EVENT_WIFI_FAIL,
EVENT_WIRELESS_CHANGE,
EVENT_SERIAL_SET,
EVENT_GOTO_WIND1,
EVENT_GOTO_WIND2,
EVENT_GOTO_WIND3,
EVENT_GOTO_WIND4,
EVENT_AUTOPOWEROFF_OFF,
EVENT_AUTOPOWEROFF_ON,
EVENT_AUTOPOWEROFF_SET,
EVENT_HIGH_BATTERY,
EVENT_MIDDLE_BATTERY,
EVENT_LOW_BATTERY,
EVENT_VERY_LOW_BATTERY,
EVENT_AZ_ENCODER_FAIL,
EVENT_AZ_ENCODER_SUCCESS,
EVENT_ALT_ENCODER_FAIL,
EVENT_ALT_ENCODER_SUCCESS,
EVENT_MOUNT_SET,
EVENT_AZ_RES_SET,
EVENT_ALT_RES_SET,
EVENT_AZ_ENC_SET,
EVENT_ALT_ENC_SET,
EVENT_MOUNT_NAME_SET
};
/////////////////////////////////////////

typedef struct
{
  byte buf[EVENTS_FIFO_SIZE];
  byte Rd;
  byte Wr;
  byte n;
}eventsFifoData;

void eventsInit();
void eventsLoop();
bool eventsIsCurrentEvent();
byte eventsReadCurrentEvent();
void eventsClearCurrentEvent();
void eventsInitFifo();
bool eventsIsNewFifo();
byte eventsAvailableFifo();
bool eventsIsFullFifo();
bool eventsIsEmptyFifo();
bool eventsPutFifo(byte data);
bool eventsGetFifo(byte *data);

#endif
